#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET    -1
#define OLED_ADDR     0x3C  // I2C address
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
bool A = false;
bool B = false;
bool C = false;
bool I = false;
bool J = false;
bool K = false;
bool L = false;
bool M = false;
bool N = false;
bool O = false;
bool P = false;
bool Q = false;
bool R = false;
bool S = false;
bool T = false;
bool U = false;
bool V = false;
bool W = false;
bool Final = false;
bool Final1 = false;
bool Final2 = false;
bool Final3 = false;
bool Final4 = false;
bool Final5 = false;
bool Final6 = false;
bool Final7 = false;
bool Final8 = false;
bool Final9 = false;
bool Final10 = false;
bool Final11 = false;
bool Final12 = false;
bool Final13 = false;
bool Final14 = false;
//💚💝💝💚💝💚💝💚💝💚
bool Ab = false;
bool Bc = false;
bool Cd = false;
bool De = false;
bool Ef = false;
bool Fg = false;
bool Gh = false;
bool StartText = false;
bool Ending1 = false;
bool Ending2 = false;
bool Ending3 = false;
bool Ending4 = false;


//start int😻😻😻😻😻
int Distancef = 100;
int If = 50;
int Jf = 110;
int Kf = 10;

//end int😻😻😻😻😻



void setup() {
  display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR);
  display.clearDisplay();
}
void loop() {

  display.display();

  if (!StartText) {
    Beginning();
    display.display();
    delay(500);
  }
  StartText = true;
  display.clearDisplay();


  // Stand Of
  if (!I) {
    Structure();
    Man22();
    Man1();
    display.display();
    delay(300);
  }
  I = true;
  display.clearDisplay();



  // Draw Gun And Jump
  if (!J) {
    Structure();

    Man2();
    Man3();
    display.display();
    delay(300);

  }
  J = true;
  display.clearDisplay();



  // Surprise From Behind
  if (!K) {
    Structure();

    Man2();
    Man4();
    display.display();
    delay(300);

  }
  K = true;
  display.clearDisplay();


  // Head Pop
  if (!L) {
    Structure();

    Man2();
    Man6();
    display.display();
    delay(100);

  }
  L = true;
  display.clearDisplay();



  if (!M) {
    Structure();
    Man5();
    display.display();

  }
  M = true;
  display.clearDisplay();



  if (!N) {
    Structure();

    Man7();
    Man8();
    display.display();
    delay(300);
  }
  N = true;
  display.clearDisplay();





  if (!O) {
    Structure();

    Man9();

    display.display();

    delay(50);

  }

  O = true;

  display.clearDisplay();
  if (!P) {
    Man4();
    Man11();
    Structure();
    display.display();
    delay(300);
  }
  P = true;
  display.clearDisplay();



  if (!Q) {
    Structure();
    Man21();
    Man12();
    Structure();
    display.display();
    delay(300);
  }
  Q = true;
  display.clearDisplay();



  if (!R) {
    Structure();
    Man13();
    display.display();
  }
  R = true;
  display.clearDisplay();



  if (!S) {
    Villain2();
    Man14();
    display.display();
    delay(200);
  }
  S = true;
  display.clearDisplay();


  if (!C) {
    Man15();
    Villain2();
    display.display();
    delay(300);
  }
  C = true;
  display.clearDisplay();


  if (!A) {
    Man15();
    Bow();
    display.display();

  }
  A = true;
  display.clearDisplay();

  if (!B) {
    Man15();

    Bowstring();
    display.display();

  }

  B = true;
  display.clearDisplay();



  if (!T) {
    Man15();
    Villain2();
    Bow1();
    Bowstring2();


    display.display();
    delay(200);
  }
  T = true;

  display.clearDisplay();



  //💕💝💝💋♥️💋♥️💋♥️
  if (!V) {
    Drawarrow();
    Arrowmoving();

    display.display();

  }
  V = true;
  display.clearDisplay();



  if (!W) {
    Arrowenter();
    Bowstring2();

    display.display();
  }
  W = true;
  display.clearDisplay();


  if (!U) {
    Villain21();
    Man15();
    Bow1();
    Bowstring2();
    display.display();
    delay(300);
  }
  U = true;
  display.clearDisplay();


  if (!Ab) {
    Villain21();
    Man14();

    display.display();
    delay(5);
  }
  Ab = true;
  display.clearDisplay();




  if (!Bc) {
    Villain21();
    Herojump();
    display.display();

  }
  Bc = true;
  display.clearDisplay();
  display.display();

  if (!Cd) {
    Superherolanding();
    Villain21();
    display.display();
    delay(200);
  }
  Cd = true;
  display.clearDisplay();

  if (!De) {
    Superherostand();
    Villain21();
    display.display();
    delay(500);
  }
  De = true;
  display.clearDisplay();



  if (!Ef) {
    Secondslide();
    display.display();
  }
  Ef = true;
  display.clearDisplay();



  if (!Fg) {
    Secondslideadd();
    display.display();
  }
  Fg = true;
  display.clearDisplay();
  if (!Gh) {
    Secondslidepause();

    display.display();
  }
  Gh = true;
  display.clearDisplay();


  if (!Final) {
    Herofinalbattlestart();
    display.display();
  }
  Final = true;
  display.clearDisplay();


  if (!Final1) {
    Bossturn();
    display.display();

  }
  Final1 = true;
  display.clearDisplay();

  if (!Final2) {
    Bullet();
    FirstDeflect();
    Bullet();
    SecondDeflect();
    Bullet();
    ThirdDeflect();
    display.display();
  }
  Final2 = true;
  display.clearDisplay();


  if (!Final3) {
    Bossdropgun();
    Bossafterdropingun();

    display.display();
  }
  Final3 = true;
  display.clearDisplay();
  if (!Final4) {
    Bossdrawblade();
    display.display();

  }
  Final4 = true;
  display.clearDisplay();

  if (!Final5) {
    Girlcharacter();
    display.display();

  }
  Final5 = true;
  display.clearDisplay();

  if (!Final6) {
    FirstStrike();
    SecondStrike();
    ThirdStrike();
    Bossarmdrop();

    display.display();
  }
  Final6 = true;
  display.clearDisplay();


  if (!Final7) {
    HerodrawbladeMirrored();
    Bossarmcutoff();
    Girlcharacter();

    display.display();

  }
  Final7 = true;
  delay(200);
  display.clearDisplay();

  if (!Final8) {
    HeroFinalCharge();

    display.display();
  }
  Final8 = true;
  display.clearDisplay();

  if (!Final9) {
    Bossheadcutoff();
    Bossheadcutoffflying();
    Bossheadswordflying();

    display.display();
  }
  Final9 = true;
  display.clearDisplay();


  if (!Final10) {
    Bossdead();
    display.display();
    delay(300);
  }
  Final10 = true;
  display.clearDisplay();
  if (!Final11) {
    Headlessbossonknees();
    display.display();
    delay(200);
  }
  Final11 = true;
  display.clearDisplay();
  if (!Final12) {
    Herorushtogirl();
    display.display();
  }
  Final12 = true;
  display.clearDisplay();


  if (!Final13) {
    Herorushtogirlpause();
    display.display();
    delay(100);
  }
  Final13 = true;
  display.clearDisplay();

  if (!Final14) {
    Heroproposing();
    display.display();
    delay(1000);
  }
  Final14 = true;
  display.clearDisplay();


  if (!Ending1) {
    Propose();
    display.display();
    delay(800);
    
  }
  Ending1 = true;
  display.clearDisplay();

  if (!Ending2) {
    ProposeReply();
    display.display();
    delay(800);

  }
  Ending2 = true;
  display.clearDisplay();

  if (!Ending3) {
    Happy();
    display.display();
    delay(800);

  }
  Ending3 = true;
  display.clearDisplay();

  if (!Ending4) {
    TheEnd();
    display.display();
    delay(800);

  }
  Ending4 = true;
  display.clearDisplay();

}






































//Loop Ends Here😻😻😻😻😻😻😻😻😻💋😻💋😻💋😻💋😻💋😻💋😻💋😻💋😻💋😻💋😻💋😻💋😻💋😻💋😻💋😻💋💋😻🤮😻💋💋😻♥️😻








void Structure() {
  display.fillRect(60, 26, 10, 45, SSD1306_WHITE);
}

void Beginning() {
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 10);
  display.println("Once upon ");
  display.println("a time");
}

void Propose() {
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 10);
  display.println("Will You");
  display.println("Marry");
  display.println("Me?");

}


void ProposeReply() {
  display.setTextSize(4);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 10);
  display.println("YES");

}

void Happy() {
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 10);
  display.println("And They Lived");
  display.println("Happily Ever after");

}

void TheEnd() {
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 10);
  display.println("The End");

}





void Man1() { //Hero First Position
  // Head
  display.drawCircle(121, 44, 2, WHITE);
  // Body
  display.drawLine(121, 48, 121, 54, WHITE);
  //Arms
  display.drawLine(122, 48, 125, 52, WHITE);
  display.drawLine(125, 52, 122, 56, WHITE);
  //Legs
  display.drawLine(121, 54, 117, 63, WHITE);
  display.drawLine(121, 54, 125, 63, WHITE);
}
void Man22() { //First Villain
  // Head
  display.drawCircle(121 - 31, 44, 2, WHITE);
  // Body
  display.drawLine(121 - 31, 48, 121 - 31, 54, WHITE);
  //Arms
  display.drawLine(122 - 31, 48, 125 - 30, 54, WHITE);
  //Legs
  display.drawLine(121 - 31, 54, 117 - 31, 63, WHITE);
  display.drawLine(121 - 31, 54, 125 - 31, 63, WHITE);
}
void Man2() { //First Villain
  // Head
  display.drawCircle(121 - 31, 44, 2, WHITE);
  // Body
  display.drawLine(121 - 31, 48, 121 - 31, 54, WHITE);
  //Arms
  display.drawLine(122 - 31, 48, 125 - 26, 48, WHITE);
  //Gun
  display.drawLine(125 - 26, 46, 125 - 21, 46, WHITE); //Gun Head
  display.drawLine(125 - 26, 46, 125 - 26, 49, WHITE); //Gun Handle
  //Legs
  display.drawLine(121 - 31, 54, 117 - 31, 63, WHITE);
  display.drawLine(121 - 31, 54, 125 - 31, 63, WHITE);
}
void Man3() { //Hero Second Position
  int I = 39;
  int L = 31;
  // Head
  display.drawCircle(121 - L, 44 - I, 2, WHITE);
  // Body
  display.drawLine(121 - L, 48 - I, 121 - L, 54 - I, WHITE);
  //Arms
  display.drawLine(122 - L, 48 - I, 125 - L, 52 - I, WHITE);
  display.drawLine(125 - L, 52 - I, 122 - L, 56 - I, WHITE);
  //Legs
  display.drawLine(121 - L, 54 - I, 117 - L, 63 - I, WHITE);
  display.drawLine(121 - L, 54 - I, 125 - L, 63 - I, WHITE);
}


void Man4() { //Hero Third Position
  int A = 41;
  // Head
  display.drawCircle(121 - A, 44, 2, WHITE);
  // Body
  display.drawLine(121 - A, 48, 121 - A, 54, WHITE);
  //Arms
  display.drawLine(121 - A, 48, 117 - A, 52, WHITE);
  display.drawLine(117 - A, 52, 121 - A, 56, WHITE);
  //Legs
  display.drawLine(121 - A, 54, 117 - A, 63, WHITE);
  display.drawLine(121 - A, 54, 125 - A, 63, WHITE) ;
}

void Man5() { //First Villain Head Pop
  for (int I = 0; I <= 15; I += 2) {
    // Head
    display.drawCircle(121 - 31, 44 - I, 2, WHITE);
    // Body
    display.drawLine(121 - 31, 48, 121 - 31, 54, WHITE);
    //Arms
    display.drawLine(122 - 31, 48, 125 - 26, 48, WHITE);
    //Gun
    display.drawLine(125 - 26, 46, 125 - 21, 46, WHITE); //Gun Head
    display.drawLine(125 - 26, 46, 125 - 26, 49, WHITE); //Gun Handle
    //Legs
    display.drawLine(121 - 31, 54, 117 - 31, 63, WHITE);
    display.drawLine(121 - 31, 54, 125 - 31, 63, WHITE);
    Man6();
    Structure();
    display.display();
    display.clearDisplay();
  }
}

void Man6() { //Hero Third Position
  int A = 41;
  // Head
  display.drawCircle(121 - A, 44, 2, WHITE);
  // Body
  display.drawLine(121 - A, 48, 121 - A, 54, WHITE);
  //Arms
  display.drawLine(121 - A, 48, 129 - A, 48, WHITE);
  //Legs
  display.drawLine(121 - A, 54, 117 - A, 63, WHITE);
  display.drawLine(121 - A, 54, 125 - A, 63, WHITE) ;
}




void Man7() { //First Villain Head Pop
  // Head
  display.drawCircle(121 - 31, 44 - 15, 2, WHITE);
  // Body
  display.drawLine(121 - 31, 48, 121 - 31, 54, WHITE);
  //Arms
  display.drawLine(122 - 31, 48, 125 - 26, 48, WHITE);
  //Gun
  display.drawLine(125 - 26, 46, 125 - 21, 46, WHITE); //Gun Head
  display.drawLine(125 - 26, 46, 125 - 26, 49, WHITE); //Gun Handle
  //Legs
  display.drawLine(121 - 31, 54, 117 - 31, 63, WHITE);
  display.drawLine(121 - 31, 54, 125 - 31, 63, WHITE);
}



void Man8() { //Hero Hero Jump Kick
  int A = 41;
  int B = 25;
  // Head
  display.drawCircle(121 - A, 44 - B, 2, WHITE);
  // Body
  display.drawLine(121 - A, 48 - B, 121 - A, 54 - B, WHITE);
  //Arms
  display.drawLine(121 - A, 48 - B, 117 - A, 52 - B, WHITE);
  display.drawLine(117 - A, 52 - B, 121 - A, 56 - B, WHITE);
  //Legs
  display.drawLine(121 - A, 54 - B, 115 - A, 54 - B, WHITE);
  display.drawLine(121 - A, 54 - B, 125 - A, 63 - B, WHITE);
}

void Man9() { //First Villain Head Pop moving forward
  // Head
  for (int distance = 0; distance <= 30; distance += 3) {
    display.drawCircle(121 - 31 + distance, 44 - 15, 2, WHITE);
    // Body
    display.drawLine(121 - 31, 48, 121 - 31, 54, WHITE);
    //Arms
    display.drawLine(122 - 31, 48, 125 - 26, 48, WHITE);
    //Gun
    display.drawLine(125 - 26, 46, 125 - 21, 46, WHITE); //Gun Head
    display.drawLine(125 - 26, 46, 125 - 26, 49, WHITE); //Gun Handle
    //Legs
    display.drawLine(121 - 31, 54, 117 - 31, 63, WHITE);
    display.drawLine(121 - 31, 54, 125 - 31, 63, WHITE);
    Man10();
    Structure();
    display.display();
    display.clearDisplay();
  }
}



void Man10() { //Hero Hero Jump Kick
  int A = 41;
  int B = 25;
  // Head
  display.drawCircle(121 - A, 44 - B, 2, WHITE);
  // Body
  display.drawLine(121 - A, 48 - B, 121 - A, 54 - B, WHITE);
  //Arms
  display.drawLine(121 - A, 48 - B, 117 - A, 52 - B, WHITE);
  display.drawLine(117 - A, 52 - B, 121 - A, 56 - B, WHITE);
  //Legs
  display.drawLine(121 - A, 54 - B, 127 - A, 54 - B, WHITE);
  display.drawLine(121 - A, 54 - B, 125 - A, 63 - B, WHITE);
}

void Man21() { //First Villain After Head Blown Off
  // Head
  // Body
  display.drawLine(125 - 27, 52, 125 - 31, 58, WHITE);
  //Arms
  display.drawLine(125 - 27, 52, 125 - 23, 58, WHITE);
  //Legs
  display.drawLine(125 - 31, 58, 125 - 31, 63, WHITE); // Thai
  display.drawLine(121 - 31, 63, 125 - 31, 63, WHITE); // Knee
}
void Man11() { //First Villain Headless
  // Body
  display.drawLine(121 - 31, 48, 121 - 31, 54, WHITE);
  //Arms
  display.drawLine(122 - 31, 48, 125 - 26, 48, WHITE);
  //Gun
  display.drawLine(125 - 26, 46, 125 - 21, 46, WHITE); //Gun Head
  display.drawLine(125 - 26, 46, 125 - 26, 49, WHITE); //Gun Handle
  //Legs
  display.drawLine(121 - 31, 54, 117 - 31, 63, WHITE);
  display.drawLine(121 - 31, 54, 125 - 31, 63, WHITE);
}




void Man12() { //Hero at the top
  int height = 37;
  int distance = 57;
  // Head
  display.drawCircle(121 - distance, 44 - height, 2, WHITE);
  // Body
  display.drawLine(121 - distance, 48 - height, 121 - distance, 54 - height, WHITE);
  //Arms
  display.drawLine(121 - distance, 48 - height, 125 - distance, 52 - height, WHITE);
  display.drawLine(125 - distance, 52 - height, 122 - distance, 56 - height, WHITE);
  //Legs
  display.drawLine(121 - distance, 54 - height, 117 - distance, 63 - height, WHITE);
  display.drawLine(121 - distance, 54 - height, 125 - distance, 63 - height, WHITE);
}


void Man13() { //Hero at the top slide
  for (int i = 0; i <= 50; i += 3) {
    int height = 37;
    int distance = 57;
    // Head
    display.drawCircle(121 - distance + i, 44 - height, 2, WHITE);
    // Body
    display.drawLine(121 - distance + i, 48 - height, 121 - distance + i, 54 - height, WHITE);
    //Arms
    display.drawLine(121 - distance + i, 48 - height, 125 - distance + i, 52 - height, WHITE);
    display.drawLine(125 - distance + i, 52 - height, 122 - distance + i, 56 - height, WHITE);
    //Legs
    display.drawLine(121 - distance + i, 54 - height, 117 - distance + i, 63 - height, WHITE);
    display.drawLine(121 - distance + i, 54 - height, 125 - distance + i, 63 - height, WHITE);
    //First Villain After Head Blown Off
    // Head
    // Body
    display.drawLine(125 - 27 + i, 52, 125 - 31 + i, 58, WHITE);
    //Arms
    display.drawLine(125 - 27 + i, 52, 125 - 23 + i, 58, WHITE);
    //Legs
    display.drawLine(125 - 31 + i, 58, 125 - 31 + i, 63, WHITE); // Thai
    display.drawLine(121 - 31 + i, 63, 125 - 31 + i, 63, WHITE); // Knee
    //structure
    display.fillRect(60 + i, 26, 10, 45, SSD1306_WHITE);


    //Villain 2😁😁😁😁😁😁😁😁😁😁😁😁😁😁😁😁
    //Head
    display.drawCircle(i, 44, 2, WHITE);
    // Body
    display.drawLine(i, 48, i, 54, WHITE);
    //Arms
    display.drawLine(i, 48, 3 + i, 52, WHITE);
    display.drawLine(3 + i, 52, i, 56, WHITE);
    //Legs
    display.drawLine(i, 54, i - 4, 63, WHITE);
    display.drawLine(i, 54, i + 4, 63, WHITE);


    display.display();
    display.clearDisplay();
  }
}
void Man14() { //Hero at the top slide stop
  int i = 50;
  int height = 37;
  int distance = 57;
  // Head
  display.drawCircle(121 - distance + i, 44 - height, 2, WHITE);
  // Body
  display.drawLine(121 - distance + i, 48 - height, 121 - distance + i, 54 - height, WHITE);
  //Arms
  display.drawLine(121 - distance + i, 48 - height, 125 - distance + i, 52 - height, WHITE);
  display.drawLine(125 - distance + i, 52 - height, 122 - distance + i, 56 - height, WHITE);
  //Legs
  display.drawLine(121 - distance + i, 54 - height, 117 - distance + i, 63 - height, WHITE);
  display.drawLine(121 - distance + i, 54 - height, 125 - distance + i, 63 - height, WHITE);
  //First Villain After Head Blown Off
  // Head
  // Body
  display.drawLine(125 - 27 + i, 52, 125 - 31 + i, 58, WHITE);
  //Arms
  display.drawLine(125 - 27 + i, 52, 125 - 23 + i, 58, WHITE);
  //Legs
  display.drawLine(125 - 31 + i, 58, 125 - 31 + i, 63, WHITE); // Thai
  display.drawLine(121 - 31 + i, 63, 125 - 31 + i, 63, WHITE); // Knee
  //structure
  display.fillRect(60 + i, 26, 10, 45, SSD1306_WHITE);

}

void Villain2() {
  int I = 50;
  // Head
  display.drawCircle(I, 44, 2, WHITE);
  // Body
  display.drawLine(I, 48, I, 54, WHITE);
  //Arms
  display.drawLine(I, 48, 3 + I, 52, WHITE);
  display.drawLine(3 + I, 52, I, 56, WHITE);
  //Legs
  display.drawLine(I, 54, I - 4, 63, WHITE);
  display.drawLine(I, 54, I + 4, 63, WHITE);
}


//Second Phase ❣️❣️❣️❣️❣️❣️😻❣️😻❣️😻❣️😻❣️😻❣️😻❣️😻❣️




void Man15() { //Hero at the top Draw Bow1🏹🏹🏹🏹🏹
  int i = 50;
  int height = 37;
  int distance = 57;
  // Head
  display.drawCircle(121 - distance + i, 44 - height, 2, WHITE);
  // Body
  display.drawLine(121 - distance + i, 48 - height, 121 - distance + i, 54 - height, WHITE);
  //Arms
  display.drawLine(121 - distance + i, 48 - height, 110 - distance + i, 51 - height, WHITE);
  //Legs
  display.drawLine(121 - distance + i, 54 - height, 117 - distance + i, 63 - height, WHITE);
  display.drawLine(121 - distance + i, 54 - height, 125 - distance + i, 63 - height, WHITE);
  //First Villain After Head Blown Off
  // Head
  // Body
  display.drawLine(125 - 27 + i, 52, 125 - 31 + i, 58, WHITE);
  //Arms
  display.drawLine(125 - 27 + i, 52, 125 - 23 + i, 58, WHITE);
  //Legs
  display.drawLine(125 - 31 + i, 58, 125 - 31 + i, 63, WHITE); // Thai
  display.drawLine(121 - 31 + i, 63, 125 - 31 + i, 63, WHITE); // Knee
  //structure
  display.fillRect(60 + i, 26, 10, 45, SSD1306_WHITE);
}
void Bow() {
  int I = 50;
  int height = 37;
  int distance = 57 - I;
  for (int Hold = 0; Hold <= 3 ; Hold++) {
    display.drawLine(109 - distance, 47 - height, 110 - distance, 47 - height + Hold, WHITE );  //Bow Hold
    display.drawLine(110 - distance, 50 - height, 111 - distance, 50 - height + Hold, WHITE  ); //Bow Hold
    display.drawLine(109 - distance, 46 - height, 109 - distance + Hold, 45 - height - Hold, WHITE); //Bow Top
    display.drawLine(111 - distance, 54 - height, 111 - distance + Hold, 54 - height + Hold, WHITE); //Bow Bottom
    Man15();
    Villain2();
    delay(200);
    display.display();
    display.clearDisplay();

  }
}
void Bowstring() {
  int i = 50;
  int distance = 57 - i;
  int height = 37;
  for (int Height  = 0; Height  <= 15; Height++) {
    display.drawLine(113 - distance, 42 - height, 115 - distance, 42 - height + Height, WHITE); //Bow String
    Bow1();
    Man15();
    Villain2();
    display.display();
    display.clearDisplay();
  }
}

void Bow1() {
  int I = 50;
  int height = 37;
  int distance = 57 - I;
  int Hold = 3;
  display.drawLine(109 - distance, 47 - height, 110 - distance, 47 - height + Hold, WHITE );  //Bow Hold
  display.drawLine(110 - distance, 50 - height, 111 - distance, 50 - height + Hold, WHITE  ); //Bow Hold
  display.drawLine(109 - distance, 46 - height, 109 - distance + Hold, 45 - height - Hold, WHITE); //Bow Top
  display.drawLine(111 - distance, 54 - height, 111 - distance + Hold, 54 - height + Hold, WHITE); //Bow Bottom





}
void Bowstring2() {
  int i = 50;
  int distance = 57 - i;
  int height = 37;
  int Height  = 15;
  display.drawLine(113 - distance, 42 - height, 115 - distance, 42 - height + Height, WHITE); //Bow String
}
void Drawarrow() {
  Man15();
  Bow1();
  Villain2();
  display.drawLine(100, 13, 120, 3, WHITE); //Bow String

}


void Arrowmoving() {
  for (int I = 0, J = 0; I <= 38 && J <= 60; I += 2, J += 3) {
    display.drawLine(100 - J, 13 + I, 120 - J, 3 + I, WHITE); //Bow String
    Villain2();
    Man15();
    Bow1();
    display.display();
    display.clearDisplay();
  }
}

void Arrowenter() {
  int I = 38;
  display.drawLine(100 - 60, 14 + I, 120 - 60, 4 + I, WHITE); //Bow String
  Man15();
  Bow1();
  Bowstring2();

  Villain2();
}




void Villain21() {
  int I = 50;
  // Head
  display.drawCircle(I - 20, 52, 2, WHITE);
  // Body
  display.drawLine(I - 17, 52, I, 54, WHITE);
  //Arms
  display.drawLine(I - 16, 52, I - 19, 62, WHITE);
  //Arrow
  display.drawLine(I - 16, 41, I - 16, 63, WHITE);
  //Legs
  display.drawLine(I, 54, I + 6, 63, WHITE);
}


// Third Phase 💋💞💞💋💞💋💞💋💞💋💋💘💋💘💋💘💋💘💙💘😻😻😻😻😻😘😘😘😘





void Herojump() { //Hero at the top slide stop
  int i1 = 50;
  int height1 = 37;
  int distance1 = 57;
  for (int I = 0; I <= 20; I++) {
    height1 += I;
    distance1 += I; // Head
    display.drawCircle(121 - distance1 + i1, 44 - height1, 2, WHITE); // Body
    display.drawLine(121 - distance1 + i1, 48 - height1, 121 - distance1 + i1, 54 - height1, WHITE); //Arms
    display.drawLine(121 - distance1 + i1, 48 - height1, 125 - distance1 + i1, 52 - height1, WHITE);
    display.drawLine(125 - distance1 + i1, 52 - height1, 122 - distance1 + i1, 56 - height1, WHITE); //Legs
    display.drawLine(121 - distance1 + i1, 54 - height1, 117 - distance1 + i1, 63 - height1, WHITE);
    display.drawLine(121 - distance1 + i1, 54 - height1, 125 - distance1 + i1, 63 - height1, WHITE); //First Villain After Head Blown Off// Head// Body
    display.drawLine(125 - 27 + i1, 52, 125 - 31 + i1, 58, WHITE); //Arms
    display.drawLine(125 - 27 + i1, 52, 125 - 23 + i1, 58, WHITE); //Legs
    display.drawLine(125 - 31 + i1, 58, 125 - 31 + i1, 63, WHITE); // Thai
    display.drawLine(121 - 31 + i1, 63, 125 - 31 + i1, 63, WHITE); // Knee//structure
    display.fillRect(60 + i1, 26, 10, 45, SSD1306_WHITE);
    Villain21();
    display.display();
    display.clearDisplay();
  }

}




void Superherolanding() { //Hero First Position
  int Distance = 100;
  // Head
  display.drawCircle(108 - Distance, 50, 2, WHITE);
  // Body
  display.drawLine(110 - Distance, 50, 121 - Distance, 54, WHITE);
  //Arms
  display.drawLine(111 - Distance, 50, 110 - Distance, 63, WHITE);


  //Leg1
  display.drawLine(111 - Distance, 56, 123 - Distance, 56, WHITE);
  display.drawLine(111 - Distance, 56, 111 - Distance, 63, WHITE);

  //Leg2

  display.drawLine(121 - Distance, 54, 125 - Distance, 63, WHITE);
  display.drawLine(125 - Distance, 63, 135 - Distance, 63, WHITE);
  display.fillRect(60 + 50, 26, 10, 45, SSD1306_WHITE);
}


void Superherostand() { //Hero First Position
  // Head
  int Distance = 100;


  display.drawCircle(121 - Distance, 44, 2, WHITE);
  // Body
  display.drawLine(121 - Distance, 48, 121 - Distance, 54, WHITE);
  //Arms
  display.drawLine(122 - Distance, 48, 125 - Distance, 52, WHITE);
  display.drawLine(125 - Distance, 52, 122 - Distance, 56, WHITE);
  //Legs
  display.drawLine(121 - Distance, 54, 117 - Distance, 63, WHITE);
  display.drawLine(121 - Distance, 54, 125 - Distance, 63, WHITE);
  display.fillRect(60 + 50, 26, 10, 45, SSD1306_WHITE);
}







void Secondslide() {


  for (int I = 0; I <= 50; I += 2) {


    // Head
    display.drawCircle(If - 20 + I, 52, 2, WHITE);
    // Body
    display.drawLine(If - 17 + I, 52, If + I, 54, WHITE);
    //Arms
    display.drawLine(If - 16 + I, 52, If - 19 + I, 62, WHITE);
    //Arrow
    display.drawLine(If - 16 + I, 41, If - 16 + I, 63, WHITE);
    //Legs
    display.drawLine(If + I, 54, If + 6 + I, 63, WHITE);


    // Head

    display.drawCircle(121 - Distancef + I, 44, 2, WHITE);
    // Body
    display.drawLine(121 - Distancef + I, 48, 121 - Distancef + I, 54, WHITE);
    //Arms
    display.drawLine(122 - Distancef + I, 48, 125 - Distancef + I, 52, WHITE);
    display.drawLine(125 - Distancef + I, 52, 122 - Distancef + I, 56, WHITE);
    //Legs
    display.drawLine(121 - Distancef + I, 54, 117 - Distancef + I, 63, WHITE);
    display.drawLine(121 - Distancef + I, 54, 125 - Distancef + I, 63, WHITE);
    //structure
    display.fillRect(Jf + I, 26, Kf + I, 45, SSD1306_WHITE);
    display.display ();
    display.clearDisplay();

  }
}




//💕💋💕❣️💕❣️💕❣️❣️💞


int Secondslidepause1 = 50;
int Secondslidepause2 = 100;
int Secondslidepause3 = 160;
int Secondslidepause4 = 60;
int Girl = 18;

void Secondslideadd() {
  for (int I = 0; I <= 53; I += 2) {
    //Second Villain🥷🥷🥷🥷🥷🥷🥷🥷🥷
    // Head
    display.drawCircle(Secondslidepause2 - 20 + I, 52, 2, WHITE);
    // Body
    display.drawLine(Secondslidepause2 - 17 + I, 52, Secondslidepause2 + I, 54, WHITE);
    //Arms
    display.drawLine(Secondslidepause2 - 16 + I, 52, Secondslidepause2 - 19 + I, 62, WHITE);
    //Arrow
    display.drawLine(Secondslidepause2 - 16 + I, 41, Secondslidepause2 - 16 + I, 63, WHITE);
    //Legs
    display.drawLine(Secondslidepause2 + I, 54, Secondslidepause2 + 6 + I, 63, WHITE);

    //Hero😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻
    // Head
    display.drawCircle(121 - Secondslidepause1 + I, 44, 2, WHITE);
    // Body
    display.drawLine(121 - Secondslidepause1 + I, 48, 121 - Secondslidepause1 + I, 54, WHITE);
    //Arms
    display.drawLine(122 - Secondslidepause1 + I,  48, 125 - Secondslidepause1 + I, 52, WHITE);
    display.drawLine(125 - Secondslidepause1 + I, 52, 122 - Secondslidepause1 + I, 56, WHITE);
    //Legs
    display.drawLine(121 - Secondslidepause1 + I, 54, 117 - Secondslidepause1 + I, 63, WHITE);
    display.drawLine(121 - Secondslidepause1 + I, 54, 125 - Secondslidepause1 + I, 63, WHITE);
    //structure
    display.fillRect(Secondslidepause3 + I, 26, Secondslidepause4 + I, 45, SSD1306_WHITE);


    //Boss Villain
    display.drawCircle(-4 + I, 44, 2, WHITE);
    // Body
    display.drawLine(-4 + I, 48, -4 + I, 54, WHITE);
    //Arms
    display.drawLine(-13 + I, 48, -4 + I, 48, WHITE);
    //Gun
    display.drawLine(-13 + I, 47, -13 + I, 49, WHITE);
    display.drawLine(-20 + I, 47, -13 + I, 47, WHITE);

    //Legs
    display.drawLine(-4 + I, 54, -8 + I, 63, WHITE);
    display.drawLine(-4 + I, 54, 0 + I, 63, WHITE);

    //Girl🥷🥷🥷🥷🥷🥷🥷

    // Head
    display.drawCircle(- Girl - 12 + I, 44, 2, WHITE);

    // Shorter Hair (Flowing on the Left Side, Head Visible)
    display.drawLine(- Girl - 13 + I, 43, - Girl - 16 + I, 48, WHITE); // Hair falling over the left side
    display.drawLine(- Girl - 16 + I, 48, - Girl - 18 + I, 52, WHITE); // Shorter strand to keep the head visible
    display.drawLine(- Girl - 13 + I, 43, - Girl - 15 + I, 50, WHITE); // Inner hair layer for fullness

    // Body
    display.drawLine(- Girl - 12 + I, 48, - Girl - 12 + I, 54, WHITE);

    // Arms
    display.drawLine(- Girl - 12 + I, 48, - Girl - 10 + I, 54, WHITE);


    // Legs
    display.drawLine(- Girl - 12 + I, 54, - Girl - 16 + I, 63, WHITE);
    display.drawLine(- Girl - 12 + I, 54, - Girl - 8 + I, 63, WHITE);
    display.display();
    display.clearDisplay();

  }
}

void Secondslidepause() {
  int I = 53;
  //Second Villain🥷🥷🥷🥷🥷🥷🥷🥷🥷
  // Head
  display.drawCircle(Secondslidepause2 - 20 + I, 52, 2, WHITE);
  // Body
  display.drawLine(Secondslidepause2 - 17 + I, 52, Secondslidepause2 + I, 54, WHITE);
  //Arms
  display.drawLine(Secondslidepause2 - 16 + I, 52, Secondslidepause2 - 19 + I, 62, WHITE);
  //Arrow
  display.drawLine(Secondslidepause2 - 16 + I, 41, Secondslidepause2 - 16 + I, 63, WHITE);
  //Legs
  display.drawLine(Secondslidepause2 + I, 54, Secondslidepause2 + 6 + I, 63, WHITE);

  //Hero😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻
  // Head
  display.drawCircle(121 - Secondslidepause1 + I, 44, 2, WHITE);
  // Body
  display.drawLine(121 - Secondslidepause1 + I, 48, 121 - Secondslidepause1 + I, 54, WHITE);
  //Arms
  display.drawLine(122 - Secondslidepause1 + I,  48, 125 - Secondslidepause1 + I, 52, WHITE);
  display.drawLine(125 - Secondslidepause1 + I, 52, 122 - Secondslidepause1 + I, 56, WHITE);
  //Legs
  display.drawLine(121 - Secondslidepause1 + I, 54, 117 - Secondslidepause1 + I, 63, WHITE);
  display.drawLine(121 - Secondslidepause1 + I, 54, 125 - Secondslidepause1 + I, 63, WHITE);
  //structure
  display.fillRect(Secondslidepause3 + I, 26, Secondslidepause4 + I, 45, SSD1306_WHITE);


  //Boss Villain
  display.drawCircle(-4 + I, 44, 2, WHITE);
  // Body
  display.drawLine(-4 + I, 48, -4 + I, 54, WHITE);
  //Arms
  display.drawLine(-13 + I, 48, -4 + I, 48, WHITE);
  //Gun
  display.drawLine(-13 + I, 47, -13 + I, 49, WHITE);
  display.drawLine(-20 + I, 47, -13 + I, 47, WHITE);

  //Legs
  display.drawLine(-4 + I, 54, -8 + I, 63, WHITE);
  display.drawLine(-4 + I, 54, 0 + I, 63, WHITE);

  //Girl🥷🥷🥷🥷🥷🥷🥷

  // Head
  display.drawCircle(- Girl - 12 + I, 44, 2, WHITE);

  // Shorter Hair (Flowing on the Left Side, Head Visible)
  display.drawLine(- Girl - 13 + I, 43, - Girl - 16 + I, 48, WHITE); // Hair falling over the left side
  display.drawLine(- Girl - 16 + I, 48, - Girl - 18 + I, 52, WHITE); // Shorter strand to keep the head visible
  display.drawLine(- Girl - 13 + I, 43, - Girl - 15 + I, 50, WHITE); // Inner hair layer for fullness

  // Body
  display.drawLine(- Girl - 12 + I, 48, - Girl - 12 + I, 54, WHITE);

  // Arms
  display.drawLine(- Girl - 12 + I, 48, - Girl - 10 + I, 54, WHITE);


  // Legs
  display.drawLine(- Girl - 12 + I, 54, - Girl - 16 + I, 63, WHITE);
  display.drawLine(- Girl - 12 + I, 54, - Girl - 8 + I, 63, WHITE);



}





//Final Phase🥷🥷🥷🥷🥷🥷🥷🥷🥷🥷




void Herofinalbattlestart() {

  for (int I = 0; I <= 12; I ++) {
    // Hero😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻
    // Head
    display.drawCircle(124, 44, 2, WHITE);
    // Body
    display.drawLine(124, 48, 124, 54, WHITE);
    // Arms
    display.drawLine(124, 48, 118, 54, WHITE);
    //Sword
    display.drawLine(117, 52, 119, 56, WHITE);
    display.drawLine(115, 53, 119, 51, WHITE);
    display.drawLine(115, 52 - I, 117, 52, WHITE);
    // Legs
    display.drawLine(124, 54, 120, 63, WHITE);
    display.drawLine(124, 54, 128, 63, WHITE);
    Girlcharacter();
    Bossarrival();
    display.display();
    display.clearDisplay();

  }
}


void Herodrawblade() {

  // Hero😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻😻
  // Head
  display.drawCircle(124, 44, 2, WHITE);
  // Body
  display.drawLine(124, 48, 124, 54, WHITE);
  // Arms
  display.drawLine(124, 48, 118, 54, WHITE);
  //Sword
  display.drawLine(117, 52, 119, 56, WHITE);
  display.drawLine(115, 53, 119, 51, WHITE);
  display.drawLine(115, 40, 117, 52, WHITE);
  // Legs
  display.drawLine(124, 54, 120, 63, WHITE);
  display.drawLine(124, 54, 128, 63, WHITE);


}



void Bossarrival() {

  // Boss Villain💘💝💖💝💖💗💖💗💖💗💖💖💗💖💗💖
  // Head
  display.drawCircle(49, 44, 2, WHITE);
  // Body
  display.drawLine(49, 48, 49, 54, WHITE);
  // Arms
  display.drawLine(40, 48, 49, 48, WHITE);
  // Gun
  display.drawLine(40, 47, 40, 49, WHITE);
  display.drawLine(34, 47, 40, 47, WHITE);
  // Legs
  display.drawLine(49, 54, 45, 63, WHITE);
  display.drawLine(49, 54, 53, 63, WHITE);
}



void Bossturn() {

  // Boss Villain💘💝💖💝💖💗💖💗💖💗💖💖💗💖💗💖
  // Head
  display.drawCircle(49, 44, 2, WHITE);
  // Body
  display.drawLine(49, 48, 49, 54, WHITE);
  // Arms
  display.drawLine(49, 48, 57, 48, WHITE);
  // Gun
  display.drawLine(57, 47, 57, 49, WHITE);
  display.drawLine(57, 47, 63, 47, WHITE);
  // Legs
  display.drawLine(49, 54, 45, 63, WHITE);
  display.drawLine(49, 54, 53, 63, WHITE);
  Herodrawblade();
  Girlcharacter();


}

void Bullet() {
  for (int I = 0; I <= 57; I += 4) {
    display.drawCircle(57 + I, 47, 1, WHITE);
    Bossturn();
    Herodrawblade();
    Girlcharacter();
    display.display();
    display.clearDisplay();
  }
}

void FirstDeflect() {
  for (int I = 0; I <= 57; I += 4) {
    display.drawCircle(114 - I, 47 - I, 1, WHITE);
    Girlcharacter();
    Bossturn();
    Herodrawblade();

    display.display();
    display.clearDisplay();

  }
}

void SecondDeflect() {
  for (int I = 0; I <= 57; I += 4) {
    display.drawCircle(114 + I, 47 - I, 1, WHITE);
    Herodrawblade();
    Bossturn() ;
    Girlcharacter();
    display.display();
    display.clearDisplay();

  }
}

void ThirdDeflect() {
  for (int I = 0; I <= 57; I += 4) {
    display.drawCircle(114 - I, 47, 1, WHITE);
    Herodrawblade();
    Bossturn() ;
    Girlcharacter();
    display.display();
    display.clearDisplay();

  }
}

void Girlcharacter() {
  // Girl🥷🥷🥷🥷🥷🥷🥷
  // Head
  display.drawCircle(23, 44, 2, WHITE);
  // Shorter Hair (Flowing on the Left Side, Head Visible)
  display.drawLine(22, 43, 19, 48, WHITE);
  display.drawLine(19, 48, 17, 52, WHITE);
  display.drawLine(22, 43, 20, 50, WHITE);
  // Body
  display.drawLine(23, 48, 23, 54, WHITE);
  // Arms
  display.drawLine(23, 48, 25, 54, WHITE);
  // Legs
  display.drawLine(23, 54, 19, 63, WHITE);
  display.drawLine(23, 54, 27, 63, WHITE);

}





//First Phase Of The Boss Fight🥷🥷🥷🥷🥷🥷🥷🥷🥷🥷🥷🥷


void Bossdropgun() {
  for (int I = 0; I <= 20; I += 5) {


    // Boss Villain💘💝💖💝💖💗💖💗💖💗💖💖💗💖💗💖
    // Head
    display.drawCircle(49, 44, 2, WHITE);
    // Body
    display.drawLine(49, 48, 49, 54, WHITE);
    // Arms
    display.drawLine(49, 48, 57, 48, WHITE);
    // Gun
    display.drawLine(57, 47 + I, 57, 49 + I, WHITE);
    display.drawLine(57, 47 + I, 63, 47 + I, WHITE);
    // Legs
    display.drawLine(49, 54, 45, 63, WHITE);
    display.drawLine(49, 54, 53, 63, WHITE);
    Herodrawblade();
    Girlcharacter();
    display.display();
    display.clearDisplay();


  }

}




void Bossafterdropingun() {

  // Boss Villain💘💝💖💝💖💗💖💗💖💗💖💖💗💖💗💖
  // Head
  display.drawCircle(49, 44, 2, WHITE);
  // Body
  display.drawLine(49, 48, 49, 54, WHITE);
  // Arms
  display.drawLine(49, 48, 56, 54, WHITE);

  //Sword Handle
  display.drawLine(57, 50, 55, 56, WHITE);//Handle
  display.drawLine(55, 49, 59, 51, WHITE);//Block Thingy
  // Legs
  display.drawLine(49, 54, 45, 63, WHITE);
  display.drawLine(49, 54, 53, 63, WHITE);
  Herodrawblade();
  Girlcharacter();


}




void Bossdrawblade() {

  for (int I = 0; I <= 13; I++) {

    // Boss Villain💘💝💖💝💖💗💖💗💖💗💖💖💗💖💗💖
    // Head
    display.drawCircle(49, 44, 2, WHITE);
    // Body
    display.drawLine(49, 48, 49, 54, WHITE);
    // Arms
    display.drawLine(49, 48, 56, 54, WHITE);
    // Sword
    display.drawLine(57, 50, 55, 56, WHITE);//Handle
    display.drawLine(55, 49, 59, 51, WHITE);//Block Thingy
    display.drawLine(59, 49 - I, 57, 49, WHITE); //Blade

    // Legs
    display.drawLine(49, 54, 45, 63, WHITE);
    display.drawLine(49, 54, 53, 63, WHITE);
    Herodrawblade();
    Girlcharacter();
    display.display();
    display.clearDisplay();


  }
}





// And The Fight Begins🥷🥷🥷🥷🥷🥷🥷🥷🥷🥷🥷🥷🥷🥷🥷🥷💛😻😻😻❤️❤️❤️❤️❤️😻😻😻😻😻😻❤️❤️





void FirstStrike() {
  for (int I = 0; I <= 30; I += 6) {
    display.drawLine(49, 10 + I, 59, 20, WHITE); //Blade
    display.drawLine(44, 10, 54, 20 - I, WHITE); //Blade
    Girlcharacter();

    display.display();
    display.clearDisplay();

  }
}


void SecondStrike() {
  for (int I = 0; I <= 30; I += 6) {
    display.drawLine(59 + I, 20, 69, 30, WHITE); //Blade
    display.drawLine(78, 30, 88 - I, 20, WHITE); //Blade
    Girlcharacter();

    display.display();
    display.clearDisplay();

  }
}


void ThirdStrike() {
  for (int I = 0, J = 0; I <= 40, J <= 15; I += 8, J += 3) {
    display.drawLine(49 + I, 10, 59 + J, 20, WHITE); //Blade
    Girlcharacter();
    display.display();
    display.clearDisplay();

  }
}

int Armdropside = 20;
int Armdropup = 30;
void Bossarmdrop() {
  for (int I = 0; I <= 40; I += 5) {
    display.drawLine(49 + Armdropside, 48 - Armdropup + I, 56 + Armdropside, 54 - Armdropup + I, WHITE); //Arm
    display.drawLine(57 + Armdropside, 50 - Armdropup + I, 55 + Armdropside, 56 - Armdropup + I, WHITE); //Handle
    display.drawLine(55 + Armdropside, 49 - Armdropup + I, 59 + Armdropside, 51 - Armdropup + I, WHITE); //Block Thingy
    display.drawLine(59 + Armdropside, 36 - Armdropup + I, 57 + Armdropside, 49 - Armdropup + I, WHITE); //Blade
    Girlcharacter();

    display.display();
    display.clearDisplay();

  }

}





//😅😭😅😁😁😭🙄😭💙💋😁😭💙😅😭💛💙💋😁😭🙄😅😭😅😁🙄😭🙄😏😅😭😁🙄😅😭😁🙄😅💙😭😁😅😁😭💙💋😭😁💋💙😭😁😅🙄😭😏🙄😅😭😁😅💙😘💛💙💋💋😘💙😭😁💋💙😭😏😅💙😭😏😅💙😭😏😅💙😭😏🙄😅🤔😏😅🙄🤔😏🙄😅😏🤔🙄😅😏🤔🙄😅






void HerodrawbladeMirrored() {
  // Mirrored Hero Character Drawing
  int MirrorSide = 40;

  // Head (mirrored)
  display.drawCircle(3 + MirrorSide, 44, 2, WHITE); // (127 - 124 = 3)

  // Body
  display.drawLine(3 + MirrorSide, 46, 3 + MirrorSide, 54, WHITE); // Neck to waist

  // Arms
  display.drawLine(3 + MirrorSide, 48, 9 + MirrorSide, 54, WHITE); // Right arm (was left)

  // Sword (mirrored to right hand)
  display.drawLine(10 + MirrorSide, 52, 8 + MirrorSide, 56, WHITE); // Sword handle (mirrored)
  display.drawLine(12 + MirrorSide, 53, 8 + MirrorSide, 51, WHITE); // Crossguard
  display.drawLine(12 + MirrorSide, 40, 10 + MirrorSide, 52, WHITE); // Sword blade

  // Legs
  display.drawLine(3 + MirrorSide, 54, 7 + MirrorSide, 63, WHITE); // Right leg (was left)
  display.drawLine(3 + MirrorSide, 54, -1 + MirrorSide, 63, WHITE); // Left leg (was right)

}

int Cutoffhandside = 80;
void Bossarmcutoff() {
  // Hero First Position (no variables)

  // Head
  display.drawCircle(21 + Cutoffhandside, 44, 2, WHITE);

  // Body
  display.drawLine(21 + Cutoffhandside, 48, 21 + Cutoffhandside, 54, WHITE);
  // Arms
  display.drawLine(18 + Cutoffhandside, 48, 21 + Cutoffhandside, 48, WHITE);
  // Legs
  display.drawLine(21 + Cutoffhandside, 54, 17 + Cutoffhandside, 63, WHITE);
  display.drawLine(21 + Cutoffhandside, 54, 25 + Cutoffhandside, 63, WHITE);


}




void HeroFinalCharge() {
  // Mirrored Hero Character Drawing
  int MirrorSide = 40;
  for (int I = 0, J = 0; I <= 40, J <= 52; I += 10, J += 13) {
    MirrorSide += J;
    // Head (mirrored)
    display.drawCircle(3 + MirrorSide, 44, 2, WHITE); // (127 - 124 = 3)

    // Body
    display.drawLine(3 + MirrorSide, 46, 3 + MirrorSide, 54, WHITE); // Neck to waist

    // Arms
    display.drawLine(3 + MirrorSide, 48, 7 + MirrorSide, 49, WHITE); // Right arm (was left)

    // Sword
    display.drawLine(-12 + I + MirrorSide, 45, 7 + MirrorSide, 49, WHITE); // Sword blade

    // Legs
    display.drawLine(3 + MirrorSide, 54, 10 + MirrorSide, 56, WHITE); // Right leg
    display.drawLine(10 + MirrorSide, 56, 10 + MirrorSide, 63, WHITE); // Right leg
    display.drawLine(3 + MirrorSide, 54, -4 + MirrorSide, 63, WHITE); // Left leg
    Girlcharacter();
    Bossarmcutoff();
    display.display();
    display.clearDisplay();

  }
}



void HeroFinalChargeend() {
  // Mirrored Hero Character Drawing
  int MirrorSide = 122;
  int I = 40;


  // Head (mirrored)
  display.drawCircle(3 + MirrorSide, 44, 2, WHITE); // (127 - 124 = 3)

  // Body
  display.drawLine(3 + MirrorSide, 46, 3 + MirrorSide, 54, WHITE); // Neck to waist

  // Arms
  display.drawLine(3 + MirrorSide, 48, 7 + MirrorSide, 49, WHITE); // Right arm (was left)

  // Sword
  display.drawLine(-12 + I + MirrorSide, 45, 7 + MirrorSide, 49, WHITE); // Sword blade

  // Legs
  display.drawLine(3 + MirrorSide, 54, 10 + MirrorSide, 56, WHITE); // Right leg
  display.drawLine(10 + MirrorSide, 56, 10 + MirrorSide, 63, WHITE); // Right leg
  display.drawLine(3 + MirrorSide, 54, -4 + MirrorSide, 63, WHITE); // Left leg
  Girlcharacter();


}




//💋💋💋💋💋💋💋💋💋💋💋💋💋💋💋😀😉🤣😍🤣😉😀🤣😍❤️😀😜😀😉😍😜😉😂😍💙😍😂😜💙😊🤔💋💋💙😍😊💙😍😜😊😉😍😜😂😜😉😍😂😜😍😉😀😜😉😍😀😜😍😉😀😜☺️😉😀😜☺️😉😀😜☺️😉😀😜😉☺️😀😜☺️😉😀


void Bossheadcutoff() {
  int Cutoffhandside = 80;
  for (int I = 0; I <= 15; I += 3) {


    // Hero First Position (no variables)
    // Head
    display.drawCircle(21 + Cutoffhandside, 44 - I, 2, WHITE);

    // Body
    display.drawLine(21 + Cutoffhandside, 48, 21 + Cutoffhandside, 54, WHITE);
    // Arms
    display.drawLine(18 + Cutoffhandside, 48, 21 + Cutoffhandside, 48, WHITE);
    // Legs
    display.drawLine(21 + Cutoffhandside, 54, 17 + Cutoffhandside, 63, WHITE);
    display.drawLine(21 + Cutoffhandside, 54, 25 + Cutoffhandside, 63, WHITE);
    HeroFinalChargeend();

    display.display();
    display.clearDisplay();


  }

}




void Herofinalswordarrange() {
  // Mirrored Hero Character Drawing
  int MirrorSide = 122;
  int I = 40;

  // Head (mirrored)
  display.drawCircle(3 + MirrorSide, 44, 2, WHITE); // (127 - 124 = 3)

  // Body
  display.drawLine(3 + MirrorSide, 46, 3 + MirrorSide, 54, WHITE); // Neck to waist

  // Arms
  display.drawLine(-3 + MirrorSide, 43, 3 + MirrorSide, 49, WHITE); // Right arm (was left)

  // Sword
  display.drawLine(-12 + MirrorSide, 34, -3 + MirrorSide, 43, WHITE); // Sword blade

  // Legs
  display.drawLine(3 + MirrorSide, 54, 10 + MirrorSide, 56, WHITE); // Right leg
  display.drawLine(10 + MirrorSide, 56, 10 + MirrorSide, 63, WHITE); // Right leg
  display.drawLine(3 + MirrorSide, 54, -4 + MirrorSide, 63, WHITE); // Left leg
  Girlcharacter();

}






void Bossheadcutoffflying() {
  int Cutoffhandside = 80;



  // Hero First Position (no variables)
  // Head
  display.drawCircle(21 + Cutoffhandside, 44 - 15, 2, WHITE);

  // Body
  display.drawLine(21 + Cutoffhandside, 48, 21 + Cutoffhandside, 54, WHITE);
  // Arms
  display.drawLine(18 + Cutoffhandside, 48, 21 + Cutoffhandside, 48, WHITE);
  // Legs
  display.drawLine(21 + Cutoffhandside, 54, 17 + Cutoffhandside, 63, WHITE);
  display.drawLine(21 + Cutoffhandside, 54, 25 + Cutoffhandside, 63, WHITE);
  Herofinalswordarrange();
  Girlcharacter();



}




void Bossheadswordflying() {
  // Mirrored Hero Character Drawing
  int MirrorSide = 122;
  int I = 40;
  int Cutoffhandside = 80;

  for (int I = 0, J = 0; I <= 30, J <= 30; I += 4, J += 6) {
    // Head (mirrored)
    display.drawCircle(3 + MirrorSide, 44, 2, WHITE); // (127 - 124 = 3)

    // Body
    display.drawLine(3 + MirrorSide, 46, 3 + MirrorSide, 54, WHITE); // Neck to waist

    // Arms
    display.drawLine(-3 + MirrorSide, 43, 3 + MirrorSide, 49, WHITE); // Right arm (was left)

    // Sword
    display.drawLine(-12 + MirrorSide - J, 34 - J, -3 + MirrorSide - J, 43 - J, WHITE); // Sword blade

    // Legs
    display.drawLine(3 + MirrorSide, 54, 10 + MirrorSide, 56, WHITE); // Right leg
    display.drawLine(10 + MirrorSide, 56, 10 + MirrorSide, 63, WHITE); // Right leg
    display.drawLine(3 + MirrorSide, 54, -4 + MirrorSide, 63, WHITE); // Left leg

    //💋💕💋💕😻💕❤️😻❤️😻❤️😻❣️😻❣️😻❣️💋❣️💋❣️😻❣️😻❣️💋❣️💋❣️💋❣️💋❣️💋❣️💋

    // Hero First Position (no variables)
    // Head
    display.drawCircle(21 + Cutoffhandside - I, 27 - I, 2, WHITE);

    // Body
    display.drawLine(21 + Cutoffhandside, 48, 21 + Cutoffhandside, 54, WHITE);
    // Arms
    display.drawLine(18 + Cutoffhandside, 48, 21 + Cutoffhandside, 48, WHITE);
    // Legs
    display.drawLine(21 + Cutoffhandside, 54, 17 + Cutoffhandside, 63, WHITE);
    display.drawLine(21 + Cutoffhandside, 54, 25 + Cutoffhandside, 63, WHITE);
    Girlcharacter();
    display.display();
    display.clearDisplay();

  }
}



//EndGame😭😉♥️💋😀😻🌹☺️☺️😻😍😉😊☺️😍😉😻☺️😍😻💗😭😻😀😭😍😀😻😭😍😻😀😭😍😀😻😭💗😀😭😻💗😀😻😭😍😀😻😭😍😀😻😭😍😭😀😻😍😀😻😭😍😉☺️😊😜😀😭😊😀☺️😊😍😅😊😊😍😅😅😁😀😅😊😍☺️😀😊😍😊🤣😊😁☺️🤣😊😁😊😭😀😍😀😊😭😍

void Bossdead() {
  int Cutoffhandside = 80;
  // Body
  display.drawLine(21 + Cutoffhandside, 48, 21 + Cutoffhandside, 54, WHITE);
  // Arms
  display.drawLine(18 + Cutoffhandside, 48, 21 + Cutoffhandside, 48, WHITE);
  // Legs
  display.drawLine(21 + Cutoffhandside, 54, 17 + Cutoffhandside, 63, WHITE);
  display.drawLine(21 + Cutoffhandside, 54, 25 + Cutoffhandside, 63, WHITE);
  Girlcharacter();
  Herojobdone();
}

void Herojobdone() {
  // Mirrored Hero Character Drawing
  int MirrorSide = 122;
  int I = 40;

  // Head (mirrored)
  display.drawCircle(3 + MirrorSide, 44, 2, WHITE); // (127 - 124 = 3)

  // Body
  display.drawLine(3 + MirrorSide, 46, 3 + MirrorSide, 54, WHITE); // Neck to waist

  // Arms
  display.drawLine(-3 + MirrorSide, 43, 3 + MirrorSide, 49, WHITE); // Right arm (was left)

  // Sword

  // Legs
  display.drawLine(3 + MirrorSide, 54, 10 + MirrorSide, 56, WHITE); // Right leg
  display.drawLine(10 + MirrorSide, 56, 10 + MirrorSide, 63, WHITE); // Right leg
  display.drawLine(3 + MirrorSide, 54, -4 + MirrorSide, 63, WHITE); // Left leg


}

void Headlessbossonknees() {

  int Cutoffhandside = 80;
  // Body

  display.drawLine(21 + Cutoffhandside, 52, 21 + Cutoffhandside, 58, WHITE);

  // Arms

  display.drawLine(18 + Cutoffhandside, 52, 21 + Cutoffhandside, 52, WHITE);

  // Legs

  display.drawLine(21 + Cutoffhandside, 58, 21 + Cutoffhandside, 63, WHITE);

  display.drawLine(21 + Cutoffhandside, 63, 27 + Cutoffhandside, 63, WHITE);

  Girlcharacter();

  Heropose();

}




void Bosslyingdead() {
  // Head (rotated to lie flat)
  int Bossbodyup = 38;
  int Bossbodyside = 37;
  // Body (horizontal line)
  display.drawLine(48 + Bossbodyside, 21 + Bossbodyup, 54 + Bossbodyside, 21 + Bossbodyup, WHITE);

  // Arms (angled down to suggest lifelessness)
  display.drawLine(48 + Bossbodyside, 24 + Bossbodyup, 48 + Bossbodyside, 21 + Bossbodyup, WHITE); // Right arm

  // Legs (spread out slightly)
  display.drawLine(54 + Bossbodyside, 21 + Bossbodyup, 63 + Bossbodyside, 25 + Bossbodyup, WHITE); // Right leg
  display.drawLine(54 + Bossbodyside, 21 + Bossbodyup, 63 + Bossbodyside, 22 + Bossbodyup, WHITE); // Left leg

}


void Heropose() { //Hero First Position
  // Head
  display.drawCircle(121, 44, 2, WHITE);
  // Body
  display.drawLine(121, 48, 121, 54, WHITE);
  //Arms
  display.drawLine(122, 48, 125, 52, WHITE);
  display.drawLine(125, 52, 122, 56, WHITE);
  //Legs
  display.drawLine(121, 54, 117, 63, WHITE);
  display.drawLine(121, 54, 125, 63, WHITE);
  Girlcharacter();
}

void Herorushtogirl() { //Hero First Position
  for (int I = 0; I <= 80; I += 20) {
    // Head
    display.drawCircle(121 - I, 44, 2, WHITE);
    // Body
    display.drawLine(121 - I, 48, 121 - I, 54, WHITE);
    //Arms
    display.drawLine(122 - I, 48, 125 - I, 52, WHITE);
    display.drawLine(125 - I, 52, 122 - I, 56, WHITE);
    //Legs
    display.drawLine(121 - I, 54, 117 - I, 63, WHITE);
    display.drawLine(121 - I, 54, 125 - I, 63, WHITE);
    Bosslyingdead();
    Girlcharacter();
    display.display();
    display.clearDisplay();

  }
}


void Herorushtogirlpause() { //Hero First Position
  int I = 80;
  // Head
  display.drawCircle(121 - I, 44, 2, WHITE);
  // Body
  display.drawLine(121 - I, 48, 121 - I, 54, WHITE);
  //Arms
  display.drawLine(122 - I, 48, 125 - I, 52, WHITE);
  display.drawLine(125 - I, 52, 122 - I, 56, WHITE);
  //Legs
  display.drawLine(121 - I, 54, 117 - I, 63, WHITE);
  display.drawLine(121 - I, 54, 125 - I, 63, WHITE);
  Bosslyingdead();
  Girlcharacter();

}

void Heroproposing() {
  // Hero First Position

  // Head
  display.drawCircle(41, 48, 2, WHITE);

  // Body
  display.drawLine(41, 50, 41, 58, WHITE);

  // Arms
  display.drawLine(41, 51, 36, 54, WHITE);
  display.drawLine(31, 51, 36, 54, WHITE);

  // Legs
  display.drawLine(41, 58, 37, 58, WHITE);//Rleg
  display.drawLine(37, 58, 37, 63, WHITE);//Rleg
  display.drawLine(41, 58, 45, 63, WHITE);//Lleg
  display.drawLine(45, 63, 50, 63, WHITE);//Lleg


  Bosslyingdead();
  Girlcharacter();
}



